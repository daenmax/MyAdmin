# 测试环境
server:
  port: 8033
  servlet:
    context-path: /my

# springdoc配置
springdoc:
  api-docs:
    # 是否启用在线文档，生产环境一定要关闭
    enabled: true
    # API路由，一般用于导入到第三方API管理工具（例如ApiFox），受到上面开关影响
    path: /api-docs
  swagger-ui:
    # 持久化认证数据
    persistAuthorization: false

# 防止XSS攻击
xss:
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/notice
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*

spring:
  servlet:
    # 上传文件或者请求包体最大大小设置
    # 此处优先级高于系统参数里配置的限制策略
    multipart:
      # 单个文件的最大大小
      max-file-size: 5MB
      # 请求包体总数据的大小
      max-request-size: 10MB

  # 数据库配置
  datasource:
    druid:
      # 基础监控配置
      web-stat-filter:
        enabled: false
        url-pattern: /*
        #设置不统计哪些URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 100
      # 监控页面
      stat-view-servlet:
        # 是否启用
        enabled: true
        # 访问地址规则
        url-pattern: /druid/*
        # 是否允许清空统计数据
        reset-enable: true
        # 设置监控页面的登录名和密码
        login-username: myadmin
        login-password: myadmin
        # 授权允许访问的IP列表，多个用,隔开 (没有配置或者为空，则允许所有访问)
        # allow: 127.0.0.1
        # 禁止访问的IP列表，(deny优先于allow)
        # deny: 192.168.1.100
    dynamic:
      druid:
        # 初始化连接个数
        initial-size: 5
        # 最小连接池数量
        min-idle: 5
        # 最大连接池数量
        max-active: 20
        # 获取连接时最大等待时间，单位毫秒
        max-wait: 30000
        # 配置多久进行一次检测，检测需要关闭的空闲连接 单位毫秒
        time-between-eviction-runs-millis: 60000
        # 配置连接在池中的最小生存时间
        min-evictable-idle-time-millis: 30000
        # 配置连接在池中的最大生存时间
        max-evictable-idle-time-millis: 30000
        # 是否验证连接的有效性
        test-while-idle: true
        # 默认验证连接有效性的SQL语句
        validation-query: SELECT 1
        # 获取连接时候验证，会影响性能
        test-on-borrow: true
        # 在连接归还到连接池时是否测试该连接
        test-on-return: false
      # 默认使用下面哪个数据库（不加@DS注解的地方，就是使用这里配置的默认数据库）
      primary: db-mysql
      datasource:
        # mysql数据源例子（如果用不到，就注释掉即可），db-mysql是自己取的名字，你想叫啥就叫啥
        db-mysql:
          url: jdbc:mysql://rm-2ze631pi758b4666mbo.mysql.rds.aliyuncs.com/myadmin?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Shanghai
          username: myadmin
          password: myadmin@2023
          # mysql5及以下需要使用com.mysql.jdbc.Driver
          # mysql8及以上需要使用com.mysql.cj.jdbc.Driver
          driverClassName: com.mysql.cj.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource
        # postgresql数据源例子（如果用不到，就注释掉即可），db-postgresql是自己取的名字，你想叫啥就叫啥
#        db-postgresql:
#          url: jdbc:postgresql://127.0.0.1:5432/myadmin
#          username: postgres
#          password: admin
#          driverClassName: org.postgresql.Driver
#          type: com.alibaba.druid.pool.DruidDataSource
        # oracle数据源例子（如果用不到，就注释掉即可），db-oracle是自己取的名字，你想叫啥就叫啥
#        db-oracle:
#          url: jdbc:oracle:thin:@//127.0.0.1:1521/orcl
#          username: MYADMIN
#          password: myadmin@2023
#          driverClassName: oracle.jdbc.OracleDriver
#          type: com.alibaba.druid.pool.DruidDataSource
#          druid:
#            # 重新指定验证SQL
#            validation-query: SELECT 1 FROM DUAL

  # redis配置
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password:
      timeout: 2000
      # 数据源序号
      database: 8
      # 集群环境打开下面注释，单机不需要打开
#      cluster:
        # 集群信息
#        nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx
        # 默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
#        maxRedirects: 3
      lettuce:
        # 连接池
        pool:
          enabled: true
          # 连接池最大连接数
          max-active: 200
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 10
          # 连接池中的最小空闲连接
          min-idle: 0

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期，单位s 默认30天, -1代表永不过期
  # 3天
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 是否尝试从 请求体 里读取 Token
  is-read-body: false
  # 是否尝试从 header 里读取 Token
  is-read-header: true
  # 是否尝试从 cookie 里读取 Token，此值为 false 后，StpUtil.login(id) 登录时也不会再往前端注入Cookie
  is-read-cookie: false
  # token前缀
  token-prefix: "Bearer"
  # jwt秘钥
  jwt-secret-key: 1qTJiBvZMaDloBOnRrngkzr5g7vuQyZA
  # 关闭启动时logo和版本号打印
  is-print: false

# 设置忽略鉴权的地址
check-login:
  # 忽略以下接口，不鉴权，路径不包含 server.servlet.context-path，即不用考虑
  ignores:
    # swagger接口文档
    - /swagger-ui.html
    - /swagger-ui/**
    - /api-docs
    - /api-docs/**
