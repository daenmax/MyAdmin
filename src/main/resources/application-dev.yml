# 测试环境
server:
  port: 8033
  servlet:
    context-path: /my

# springdoc配置
springdoc:
  api-docs:
    # 是否启用，生产环境一定要关闭
    enabled: true
    # API路由，一般用于导入到第三方API管理工具，受到上面开关影响
    path: /doc


spring:
  # 数据库配置
  datasource:
    dynamic:
      druid:
        # 初始化连接个数
        initial-size: 5
        # 最小连接池数量
        min-idle: 5
        # 最大连接池数量
        max-active: 20
        # 获取连接时最大等待时间，单位毫秒
        max-wait: 30000
        # 配置多久进行一次检测，检测需要关闭的空闲连接 单位毫秒
        time-between-eviction-runs-millis: 60000
        # 配置连接在池中的最小生存时间
        min-evictable-idle-time-millis: 30000
        # 配置连接在池中的最大生存时间
        max-evictable-idle-time-millis: 30000
        # 是否验证连接的有效性
        test-while-idle: true
        # 验证连接有效性的SQL语句
        validation-query: SELECT 1 FROM DUAL
        # 获取连接时候验证，会影响性能
        test-on-borrow: true
        # 在连接归还到连接池时是否测试该连接
        test-on-return: false
        # 基础监控配置
        web-stat-filter:
          enabled: true
          url-pattern: /*
          #设置不统计哪些URL
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
          session-stat-enable: true
          session-stat-max-count: 100
        # 监控页（spring6与spring boot3会采用Jakarta作为新的命名空间，由于Druid没有实现Jakarta导致监控页面不能用）
        stat-view-servlet:
          # 是否启用
          enabled: true
          # 访问地址规则
          url-pattern: /druid/*
          # 是否允许清空统计数据
          reset-enable: true
          # 设置监控页面的登录名和密码
          login-username: myadmin
          login-password: myadmin
          # 授权允许访问的IP列表，多个用,隔开 (没有配置或者为空，则允许所有访问)
          #        allow: 127.0.0.1
          # 禁止访问的IP列表，(deny优先于allow)
      #        deny: 192.168.1.100
      # 默认使用下面哪个数据库（不加@DS注释的地方，就是使用这里配置的默认数据库）
      primary: master
      datasource:
        # 主数据源，master是自己取的名字，你想叫啥就叫啥
        master:
          url: jdbc:mysql://127.0.0.1:3306/myadmin?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Shanghai
          username: myadmin
          password: myadmin
          driverClassName: com.mysql.cj.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource
        # 第二个数据源（如果用不到，就注释掉即可），slave是自己取的名字，你想叫啥就叫啥
        slave:
          url: jdbc:mysql://127.0.0.1:3306/dbtest?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Shanghai
          username: dbtest
          password: dbtest
          driverClassName: com.mysql.cj.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource
        # ORACLE数据库使用例子
#        slave-oracle:
#          url: jdbc:oracle:thin:@//172.16.111.181:1521/orcl
#          username: myadmin
#          password: myadmin
#          driverClassName: oracle.jdbc.OracleDriver

  # redis配置
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password:
      timeout: 2000
      # 数据源序号
      database: 8
      # 集群环境打开下面注释，单机不需要打开
#      cluster:
        # 集群信息
#        nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx
        # 默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
#        maxRedirects: 3
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
